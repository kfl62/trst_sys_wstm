:ruby
  unit    = @firm.units.find(@uid)
  to_soon = Date.today != Date.today.end_of_month
- if to_soon
  - xhr_hidden_data({dialog: 'create',js_ext: 'desk_stock'})
  %table
    %tbody
      %tr{class: 'pdb-05'}
        - td_detail_for 'warning w-35rem',t('intro.create.desk_stock.too_soon',data: l(Date.today.end_of_month,format: :trst))
    %tfoot{class: 'ta-ce'}
      - tr_buttonset ['cancel']
- else
  - unit.stock_now.freights.where(:qu.ne => 0).asc(:id_stats,:pu).each{|f| @object.freights << f.clone}
  - xhr_hidden_data({dialog: 'create',js_ext: 'desk_stock'})
  %form{action: "/sys/#{@path}", method: "post"}
    %table
      %thead
        %tr
          %td
            - label_for @object, 'name',    {tag: {class: 'strip'}}
            %span{class: 'st'}= "Stock_#{unit.slug}_#{l(Date.today.end_of_month.tomorrow, format: '%Y-%m')}"
            - input_for @object, 'name',    {tag: {type: 'hidden',value: "Stock_#{unit.slug}_#{l(Date.today.end_of_month.tomorrow, format: '%Y-%m')}"}}
            - label_for @object, 'id_date', {tag: {class: 'strip'}}
            %span{class: 'st'}= Date.today.end_of_month.tomorrow.to_s
            - input_for @object, 'id_date',  {tag: {type: 'hidden',value: Date.today.end_of_month.tomorrow.to_s}}
            - input_for @object, 'unit_id',  {tag: {type: 'hidden',value: @uid}}
        %tr{class: 'pdb-05'}
          %td
            %span.stats.width-250= "Stock initial #{l(Date.today.end_of_month.tomorrow, format: '%B, %Y').downcase}"
            - input_for @object, 'expl',    {tag: {type: 'hidden',value: "Stock initial #{l(Date.today.end_of_month.tomorrow, format: '%B, %Y').downcase}"}}
      %tbody
        %tr
          %td
            = haml :"#{@path}/_form"
      %tfoot{class: 'ta-ce'}
        - tr_buttonset ['save','cancel']
