:ruby
  firm    = Wstm::PartnerFirm.find_by(firm: true)
  unit_id = @current_user.unit_id || session[:unit_id]
  unit    = firm.units.find(unit_id)
  to_soon = Date.today != Date.today.end_of_month
- if to_soon
  %span#hidden_data{data: {dialog: "create",model_name: mat(@object,'model_name'),oid: "null",js_ext: 'desk_stock'}}
  %table
    %tbody
      %tr.pdb-05
        %td
          %detail.warning.w-35rem
            = t('intro.create.desk_stock.too_soon', data: l(Date.today.end_of_month,format: :trst))
    %tfoot
      %tr
        - td_buttonset(['cancel'],{style: 'ta-ce'})
- else
  - unit.stock_now.freights.where(:qu.ne => 0).asc(:id_stats,:pu).each{|f| @object.freights << f.clone}
  %span#hidden_data{data: {dialog: "create",model_name: mat(@object,'model_name'),oid: "null",js_ext: 'desk_stock'}}
  %form{action: "/sys/#{@path}", method: "post"}
    %table
      %thead
        %tr
          %td
            - label_for @object, 'name',    {style: 'stats'}
            %span.stats.st= "Stock_#{unit.slug}_#{l(Date.today.end_of_month.tomorrow, format: '%Y-%m')}"
            - input_for @object, 'name',    {type: 'hidden',value: "Stock_#{unit.slug}_#{l(Date.today.end_of_month.tomorrow, format: '%Y-%m')}"}
            - label_for @object, 'id_date', {style: 'stats'}
            %span.stats.width-150.ce.st= Date.today.end_of_month.tomorrow.to_s
            - input_for @object, 'id_date',  {type: 'hidden',value: Date.today.end_of_month.tomorrow.to_s}
            - input_for @object, 'unit_id',  {type: 'hidden',value: unit_id}
        %tr.pdb-05
          %td
            %span.stats.width-250= "Stock initial #{l(Date.today.end_of_month.tomorrow, format: '%B, %Y').downcase}"
            - input_for @object, 'expl',    {type: 'hidden',value: "Stock initial #{l(Date.today.end_of_month.tomorrow, format: '%B, %Y').downcase}"}
      = partial "#{@path}/form", locals: {unit: unit}
      %tfoot
        %tr
          - td_buttonset(['save','cancel'],{style: 'ta-ce'})
