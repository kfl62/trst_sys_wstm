:ruby
  wpu = params[:wpu].to_bool rescue true
  freights =  @firm.units.find(@uid).freights.options_for_dln wpu

%table
  %tr
    %td
      - value_for @object, 'txt', {tag: {class: 'strip',value: 'Materiale Ã®n stoc. Valoric?'}}
      - input_for @object, 'wpu', {tag: {data: {mark: 'wpu'},class:'true_ro',type: 'radio',checked: wpu,name:'wpu',value: 'true'}}
      - input_for @object, 'wpu', {tag: {data: {mark: 'wpu'},class:'false_ro',type: 'radio',disabled: true,checked: !wpu,name:'wpu',value: 'false'}}
      - value_for @object, 'btn', {tag: {class: 'strip button fl-ri red pointer fa fa-plus-circle fa-lg',value: 'strip',title: t('button.new_row')}}
      - value_for @object, 'btn', {tag: {class: 'strip button fl-ri red pointer fa fa-refresh fa-lg',value: 'strip'}}
  %tr
    %td
      - value_for @object, 'ord', {tag: {data: {mark: 'related-add',val: 'nro'},value: '1.'}}
      %select{data: {mark: 'related-add step',val: 'freight'}}
        %option{value: 'null'} Selectare material
        - freights.each do |f|
          - title = wpu ? "PU: #{("%.2f" % f[2][:pu]).rjust(5,"\u00a0")}; Stoc (#{f[2][:um]}): #{('%.2f' % f[2][:stck]).rjust(8,"\u00a0")}" : "Stoc (#{f[2][:um]}): #{('%.2f' % f[2][:stck]).rjust(8,"\u00a0")}"
          %option{value: f[0], data: f[2], title: title, style: 'font-family:Mono'}= "#{f[1].ljust(17, "\u00a0")} : #{title}"
      - input_for @object, 'um',  {tag: {data: {mark: 'related-add',val: 'um'},disabled: true,class: 'w-4rem ta-ce',name: 'strip',value: 'strip', placeholder: 'UM'}}
      - input_for @object, 'stck',{tag: {data: {mark: 'related-add',val: 'stck'},disabled: true,class: 'w-8rem ta-ri',name: 'strip',value: 'strip', placeholder: 'Stock'}}
      - input_for @object, 'qu',  {tag: {data: {mark: 'related-add ui-focus step',val: 'qu'},class: 'w-6rem ta-ri',name: 'strip',value: 'strip', placeholder: 'Cant.'}}
